name: Hola Mundo

# eventos que disparan el workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      test:
        description: "Workflow dispatch input test"
        required: false
        default: "Hola Mundo"
# jobs: son los trabajos que se ejecutan dentro del workflow, cada job se ejecuta en un runner diferente
jobs:
  basic-example:
    # runner es el servidor donde se ejecuta el job
    runs-on: ubuntu-latest
    # steps: son los pasos que se ejecutan dentro del runner
    steps:
      - name: Hola Mundo
        run: echo ${{ github.event.inputs.test }}

      - name: Touch file
        run: touch Hola.txt

      - name: Set text
        run: echo "Hola Mundo" >> Hola.txt

      - name: Read file
        run: cat Hola.txt

  actions-example:
    runs-on: ubuntu-latest
    needs: [basic-example]
    steps: 
      # actions: son acciones que se ejecutan dentro del job, pueden ser acciones de github o acciones personalizadas
      - name: Checkout code
        # si tiene actions por delante es una acción de github, si no tiene actions por delante es una acción personalizada
        uses: actions/checkout@v4.1.7

      - name: LS
        run: ls -al

      - name: Script
        run: |
          chmod +x script.sh
          ./script.sh

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        # nos permite pasar parametros a la acción
        with:
          node-version: latest

      - name: node version
        run: node -v

  local-action:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ls
        uses: ./.github/actions/my-action
        with:
          message: "Carla"
  
  services-example:
    runs-on: ubuntu-latest
    # Servicios que se ejecutan dentro del job, pueden ser bases de datos, servidores, etc. Se ejecutan en contenedores de docker
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
    
    steps:
      - name: Test
        run: ls

  env-variables-and-secrets:
    runs-on: ubuntu-latest
    # Se pueden definir variables de entorno que se pueden usar en el job, en los steps o en las acciones
    env:
      MY_VAR: "Mi variable de entorno"
    
    steps:
      - name: Test
        env:
          STEP_MY_VAR: Nivel step
        # Podemos usar variables setteadas desde github usando ${{ vars.VARIABLE }}
        run: echo "Valor $MY_VAR $STEP_MY_VAR  ${{ vars.MY_VARIABLE}}"

      - name: Secret
        # Se pueden usar secretos seteados desde github usando ${{ secrets.SECRET }}
        run: echo "Secret ${{ secrets.MY_SECRET }}"

  conditionals-and-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: test
        uses: actions/checkout@v3

      - name: Conditional step
        # Se pueden usar condiciones para ejecutar pasos, jobs o workflows completos usando if, su valor puede ser success o failure
        if: ${{ steps.test.outputs.result == 'success' }}
        run: ls -al
      
      - name: Artifact
        # Se pueden usar artefactos para guardar archivos entre jobs, se guardan en el job que se ejecuta y se pueden usar en otros jobs
        uses: actions/upload-artifact@v4
        # Tambien tenemos functiones que podemos usar en el if, como success(), failure(), always(), etc.
        if: success()
        with:
          name: my-artifact
          path: script.sh
  
  matrix-example:
    runs-on: ubuntu-latest
    # Se pueden usar matrices para ejecutar el mismo job en diferentes entornos, se pueden usar variables de entorno, secretos, etc.
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
      
      - name: Run script
        run: |
          echo "PHP version: ${{ matrix.php-version }}"
          php -v
